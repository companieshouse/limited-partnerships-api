{
  "swagger": "2.0",
  "info": {
    "title": "Companies House - Limited Partnerships API",
    "description": "An API to allow the registration, transition and update of Limited Partnerships",
    "version": "1.0.0"
  },
  "host": "api.companieshouse.gov.uk",
  "schemes": [
    "https"
  ],
  "tags": [
    {
      "name": "Incorporation"
    },
    {
      "name": "Limited Partnerships"
    },
    {
      "name": "General Partner"
    },
    {
      "name": "Limited Partner"
    },
    {
      "name": "Healthcheck"
    }
  ],
  "paths": {
    "/transactions/{transaction_id}/incorporation/limited-partnership": {
      "post": {
        "tags": [
          "Incorporation"
        ],
        "summary": "Create a Limited Partnership incorporation",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IncoporationSubmission"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Limited Partnership Incorporation has been successfully created.",
            "schema": {
              "$ref": "#/definitions/CreatedResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorised"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/transactions/{transaction_id}/incorporation/limited-partnership/{filing_resource_id}": {
      "get": {
        "tags": [
          "Incorporation"
        ],
        "summary": "Get a Limited Partnership incorporation",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "filing_resource_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "include_sub_resources",
            "in": "query",
            "required": true,
            "type": "boolean",
            "description": "Whether to include sub-resources or not"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/LimitedPartnershipIncorporationGetResponse"
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/transactions/{transaction_id}/limited-partnership/partnership": {
      "post": {
        "tags": [
          "Limited Partnerships"
        ],
        "summary": "Create a Limited Partnership submission",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LimitedPartnershipSubmission"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Limited Partnership Submission has been successfully created.",
            "schema": {
              "$ref": "#/definitions/CreatedResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorised"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/transactions/{transaction_id}/limited-partnership/partnership/{submission_id}": {
      "get": {
        "tags": [
          "Limited Partnerships"
        ],
        "summary": "Get Limited Partnership details",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "submission_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/LimitedPartnershipSubmission"
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Limited Partnerships"
        ],
        "summary": "Update a Limited Partnership submission",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "submission_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PartnershipData"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Limited Partnership Submission has been successfully updated."
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorised"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/transactions/{transaction_id}/limited-partnership/general-partner": {
      "post": {
        "tags": [
          "General Partner"
        ],
        "summary": "Create a General Partner submission",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeneralPartnerSubmission"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "General Partner Submission has been successfully created.",
            "schema": {
              "$ref": "#/definitions/CreatedResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorised"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/transactions/{transaction_id}/limited-partnership/general-partner/{submission_id}": {
      "get": {
        "tags": [
          "General Partner"
        ],
        "summary": "Get General Partner details",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "submission_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/PartnerData"
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "General Partner"
        ],
        "summary": "Update a General Partner details",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "submission_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeneralPartnerSubmission"
            }
          }
        ],
        "responses": {
          "200": {
             "description": "General Partner Submission has been successfully updated."
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/transactions/{transaction_id}/limited-partnership/limited-partner": {
      "post": {
        "tags": [
          "Limited Partner"
        ],
        "summary": "Create a Limited Partner",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LimitedPartnerSubmission"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Limited Partner Submission has been successfully created.",
            "schema": {
              "$ref": "#/definitions/CreatedResponse"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorised"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/transactions/{transaction_id}/limited-partnership/limited-partner/{submission_id}": {
      "get": {
        "tags": [
          "Limited Partner"
        ],
        "summary": "Get Limited Partner details",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "submission_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/LimitedPartnerData"
            }
          },
          "401": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "tags": [
          "Limited Partner"
        ],
        "summary": "Update a Limited Partner details",
        "parameters": [
          {
            "name": "transaction_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "submission_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LimitedPartnerSubmission"
            }
          }
        ],
        "responses": {
          "200": {
             "description": "Limited Partner has been successfully updated."
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorised"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/limited-partnership/healthcheck": {
      "get": {
        "summary": "Health check URL returns 200 if service is running",
        "tags": [
          "Healthcheck"
        ],
        "responses": {
          "200": {
            "description": "Request has been received",
            "schema": {
              "type": "object"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "IncorporationData": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "enum": [
            "limited-partnership-registration",
            "limited-partnership-transition"
          ]
        }
      }
    },
    "PartnershipData": {
      "type": "object",
      "properties": {
        "partnership_name": {
          "type": "string"
        },
        "name_ending": {
          "type": "string",
          "enum": [
            "Limited Partnership",
            "LP",
            "L.P.",
            "Partneriaeth Cyfyngedig",
            "PC",
            "P.C."
          ]
        },
        "partnership_type": {
          "type": "string",
          "enum": [
            "LP",
            "PFLP",
            "SLP",
            "SPFLP"
          ]
        },
        "jurisdiction": {
          "type": "string",
          "enum": [
            "England and Wales",
            "Northern Ireland",
            "Scotland"
          ]
        }
      }
    },
    "PartnerData": {
       "type": "object",
       "properties": {
        "country": {
          "type": "string"
        },
        "date_effective_from": {
          "type": "string",
          "format": "date"
        },
        "date_of_birth": {
          "type": "string",
          "format": "date"
        },
        "etag": {
          "type": "string"
        },
        "forename": {
          "type": "string"
        },
        "former_names": {
          "type": "string"
        },
        "governing_law": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "legal_entity_register_name": {
          "type": "string"
        },
        "legal_entity_registration_location": {
          "type": "string"
        },
        "legal_form": {
          "type": "string"
        },
        "nationality1": {
          "$ref": "#/definitions/Nationality"
        },
        "nationality2": {
          "$ref": "#/definitions/Nationality"
        },
        "not_disqualified_statement_checked" :{
          "type" : "boolean"
        },
        "principal_office_address": {
           "$ref": "#/definitions/Address"
        },
        "registered_company_number": {
          "type": "string"
        },
        "resignation_date": {
          "type": "string",
          "format": "date"
        },
        "service_address": {
          "$ref": "#/definitions/Address"
        },
        "surname": {
          "type": "string"
        },
        "usual_residential_address": {
          "$ref": "#/definitions/Address"
        }
      }
    },
    "LimitedPartnerData": {
      "allOf": [
        {
          "type": "object",
          "properties": {
            "contribution_currency_type": {
            "type": "string"
            },
            "contribution_currency_value": {
              "type": "string"
            },
            "contribution_non_monetary_value": {
              "type": "string"
            }
          }
        },
        { "$ref": "#/definitions/PartnerData" }
      ]
    },
    "LimitedPartnershipIncorporationGetResponse": {
      "type": "object",
      "required": [
        "etag",
        "kind"
      ],
      "properties": {
        "etag": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "sub_resources": {
          "type": "object",
          "properties": {
            "general_partners": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "limited_partners": {
              "type": "array",
              "items": {
                "type": "object"
              }
            },
            "partnership": {
              "type": "object",
              "$ref": "#/definitions/LimitedPartnershipSubmission"
            }
          }
        }
      }
    },
    "IncoporationSubmission": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/IncorporationData"
        }
      }
    },
    "LimitedPartnershipSubmission": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "$ref": "#/definitions/PartnershipData"
        }
      }
    },
    "GeneralPartnerSubmission": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
         "$ref": "#/definitions/PartnerData"
        }
      }
    },
    "LimitedPartnerSubmission": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
         "$ref": "#/definitions/LimitedPartnerData"
        }
      }
    },
    "Address" : {
      "type": "object",
      "required": [
        "address_line_1",
        "country",
        "locality",
        "postal_code",
        "premises"
      ],
      "properties": {
        "address_line_1": {
          "type": "string"
        },
        "address_line_2": {
          "type": "string"
        },
        "care_of": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "locality": {
          "type": "string"
        },
        "po_box": {
          "type": "string"
        },
        "postal_code": {
          "type": "string"
        },
        "premises": {
          "type": "string"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "Nationality" : {
      "type": "string",
      "enum": [
        "Afghan",
        "Albanian",
        "Algerian",
        "American",
        "Andorran",
        "Angolan",
        "Anguillan",
        "Argentine",
        "Armenian",
        "Australian",
        "Austrian",
        "Azerbaijani",
        "Bahamian",
        "Bahraini",
        "Bangladeshi",
        "Barbadian",
        "Belarusian",
        "Belgian",
        "Belizean",
        "Beninese",
        "Bermudian",
        "Bhutanese",
        "Bolivian",
        "Botswanan",
        "Brazilian",
        "British",
        "British Virgin Islander",
        "Bruneian",
        "Bulgarian",
        "Burkinan",
        "Burmese",
        "Burundian",
        "Cambodian",
        "Cameroonian",
        "Canadian",
        "Cape Verdean",
        "Cayman Islander",
        "Central African",
        "Chadian",
        "Chilean",
        "Chinese",
        "Citizen of Antigua and Barbuda",
        "Citizen of Bosnia and Herzegovina",
        "Citizen of Guinea-Bissau",
        "Citizen of Kiribati",
        "Citizen of Seychelles",
        "Citizen of the Dominican Republic",
        "Citizen of Vanuatu",
        "Colombian",
        "Comoran",
        "Congolese (Congo)",
        "Congolese (DRC)",
        "Cook Islander",
        "Costa Rican",
        "Croatian",
        "Cuban",
        "Cymraes",
        "Cymro",
        "Cypriot",
        "Czech",
        "Danish",
        "Djiboutian",
        "Dominican",
        "Dutch",
        "East Timorese",
        "Ecuadorean",
        "Egyptian",
        "Emirati",
        "English",
        "Equatorial Guinean",
        "Eritrean",
        "Estonian",
        "Ethiopian",
        "Faroese",
        "Fijian",
        "Filipino",
        "Finnish",
        "French",
        "Gabonese",
        "Gambian",
        "Georgian",
        "German",
        "Ghanaian",
        "Gibraltarian",
        "Greek",
        "Greenlandic",
        "Grenadian",
        "Guamanian",
        "Guatemalan",
        "Guinean",
        "Guyanese",
        "Haitian",
        "Honduran",
        "Hong Konger",
        "Hungarian",
        "Icelandic",
        "Indian",
        "Indonesian",
        "Iranian",
        "Iraqi",
        "Irish",
        "Israeli",
        "Italian",
        "Ivorian",
        "Jamaican",
        "Japanese",
        "Jordanian",
        "Kazakh",
        "Kenyan",
        "Kittitian",
        "Kosovan",
        "Kuwaiti",
        "Kyrgyz",
        "Lao",
        "Latvian",
        "Lebanese",
        "Liberian",
        "Libyan",
        "Liechtenstein citizen",
        "Lithuanian",
        "Luxembourger",
        "Macanese",
        "Macedonian",
        "Malagasy",
        "Malawian",
        "Malaysian",
        "Maldivian",
        "Malian",
        "Maltese",
        "Marshallese",
        "Martiniquais",
        "Mauritanian",
        "Mauritian",
        "Mexican",
        "Micronesian",
        "Moldovan",
        "Monegasque",
        "Mongolian",
        "Montenegrin",
        "Montserratian",
        "Moroccan",
        "Mosotho",
        "Mozambican",
        "Namibian",
        "Nauruan",
        "Nepalese",
        "New Zealander",
        "Nicaraguan",
        "Nigerian",
        "Nigerien",
        "Niuean",
        "North Korean",
        "Northern Irish",
        "Norwegian",
        "Omani",
        "Pakistani",
        "Palauan",
        "Palestinian",
        "Panamanian",
        "Papua New Guinean",
        "Paraguayan",
        "Peruvian",
        "Pitcairn Islander",
        "Polish",
        "Portuguese",
        "Prydeinig",
        "Puerto Rican",
        "Qatari",
        "Romanian",
        "Russian",
        "Rwandan",
        "Salvadorean",
        "Sammarinese",
        "Samoan",
        "Sao Tomean",
        "Saudi Arabian",
        "Scottish",
        "Senegalese",
        "Serbian",
        "Sierra Leonean",
        "Singaporean",
        "Slovak",
        "Slovenian",
        "Solomon Islander",
        "Somali",
        "South African",
        "South Korean",
        "South Sudanese",
        "Spanish",
        "Sri Lankan",
        "St Helenian",
        "St Lucian",
        "Stateless",
        "Sudanese",
        "Surinamese",
        "Swazi",
        "Swedish",
        "Swiss",
        "Syrian",
        "Taiwanese",
        "Tajik",
        "Tanzanian",
        "Thai",
        "Togolese",
        "Tongan",
        "Trinidadian",
        "Tristanian",
        "Tunisian",
        "Turkish",
        "Turkmen",
        "Turks and Caicos Islander",
        "Tuvaluan",
        "Ugandan",
        "Ukrainian",
        "Uruguayan",
        "Uzbek",
        "Vatican citizen",
        "Venezuelan",
        "Vietnamese",
        "Vincentian",
        "Wallisian",
        "Welsh",
        "Yemeni",
        "Zambian",
        "Zimbabwean"
      ]
    },
    "CreatedResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    }
  }
}

